-- Tests for the grants and math patch

Macro DeployComptroller price=1.0
    Unitroller Deploy
    PriceOracle Deploy Fixed price
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address Zero) (Address Zero) (Address Zero) (Address Zero) (Address Zero)
    ComptrollerImpl Deploy Scenario ComptrollerScen
    Unitroller SetPendingImpl ComptrollerScen
    ComptrollerImpl ComptrollerScen Become
    Comptroller SetPriceOracle (PriceOracleProxy Address)
    Comptroller SetCloseFactor 0.5
    Comptroller LiquidationIncentive 1.1

Macro SetupMarkets
    NewAToken ZRX aZRX
    NewAToken BAT aBAT
    Support aZRX collateralFactor:0.5
    Support aBAT collateralFactor:0.5

Macro SetupArsToken arsInitAmount=5000000e18
    Erc20 Deploy Standard ARS "ARS Token" 18
    Give (Address Comptroller) arsInitAmount ARS
    Comptroller Send "setArsAddress(address)" (Address ARS)

-- NewComptroller, but with markets listed so that we can make them ars markets in constructor
Macro FlywheelComptroller price=1.0 borrowRate=0.000005 arsInitAmount=5000000e18
    DeployComptroller price
    SetupMarkets
    SetupArsToken arsInitAmount

Macro InitUsage
    Prep Geoff 100e18 ZRX aZRX
    Mint Geoff 50e18 aZRX--tokenbalance = 50e18 / 2e9 = 2.5e10
    Prep Coburn Some BAT aBAT
    Mint Coburn 6e18 aBAT--tokenbalance = 6e18 / 2e9 = 3e9
    EnterMarkets Coburn aBAT
    Borrow Coburn 1e18 aZRX

Macro InitUsageAndSpeeds
    InitUsage
    Comptroller SetArsSpeeds (aZRX aBAT) (1 1) (1 1)

Test "ARS can be granted in combination with liquidity rewards"
    FlywheelComptroller
    InitUsageAndSpeeds
    Assert Equal (Comptroller ArsAccrued Geoff) 0
    Assert Equal (Erc20 ARS TokenBalance Geoff) 0
    FastForward 1000 Blocks
    Comptroller ClaimArs Geoff
    Comptroller Send "_grantArs(address,uint256)" (Address Geoff) 1000
    Assert Equal (Comptroller ArsAccrued Geoff) 0
    Assert Equal (Erc20 ARS TokenBalance Geoff) 2000 -- 1000 (grant) + 1000 (ARS supply rewards)

Test "ARS can be granted"
    -- Can be granted once
    FlywheelComptroller
    InitUsageAndSpeeds
    Assert Equal (Comptroller ArsAccrued Geoff) 0
    Assert Equal (Erc20 ARS TokenBalance Geoff) 0
    Comptroller Send "_grantArs(address,uint256)" (Address Geoff) 1000
    Assert Equal (Comptroller ArsAccrued Geoff) 0
    Assert Equal (Erc20 ARS TokenBalance Geoff) 1000
    -- Assert Log ArsGranted (recipient (Address Geoff)) (amount "1000")
    -- Can be granted multiple times
    Comptroller Send "_grantArs(address,uint256)" (Address Geoff) 2000
    Assert Equal (Comptroller ArsAccrued Geoff) 0
    Assert Equal (Erc20 ARS TokenBalance Geoff) 3000

Test "ARS can be streamed to contributors"
    FlywheelComptroller
    InitUsageAndSpeeds
    Assert Equal (Comptroller ArsAccrued Torrey) 0
    Assert Equal (Erc20 ARS TokenBalance Torrey) 0
    Comptroller Send "_setContributorArsSpeed(address,uint256)" (Address Torrey) 300
    -- Assert Log ContributorArsSpeedUpdated (recipient (Address Torrey)) (amount "300")
    FastForward 1000 Blocks
    -- Just claimArs does not receive ARS
    Comptroller ClaimArs Torrey
    Assert Equal (Comptroller ArsAccrued Torrey) 0
    Assert Equal (Erc20 ARS TokenBalance Torrey) 0
    -- Calling updateContributorRewards and then claimArs receives ARS
    Comptroller UpdateContributorRewards Torrey
    Assert Equal (Comptroller ArsAccrued Torrey) 300000
    Comptroller ClaimArs Torrey
    Assert Equal (Comptroller ArsAccrued Torrey) 0
    Assert Equal (Erc20 ARS TokenBalance Torrey) 300000

Test "ARS can be streamed in combination with liquidity rewards"
    FlywheelComptroller
    InitUsageAndSpeeds
    Comptroller Send "_setContributorArsSpeed(address,uint256)" (Address Geoff) 300
    FastForward 1000 Blocks
    -- Just claimArs does not receive ARS
    Comptroller UpdateContributorRewards Geoff
    Assert Equal (Comptroller ArsAccrued Geoff) 300000
    Comptroller ClaimArs Geoff
    Assert Equal (Comptroller ArsAccrued Geoff) 0
    Assert Equal (Erc20 ARS TokenBalance Geoff) 301000 -- 300000 (contributer grant) + 1000 (ARS supply rewards)

Test "ARS streaming can be changed for contributors"
    FlywheelComptroller
    InitUsageAndSpeeds
    Comptroller Send "_setContributorArsSpeed(address,uint256)" (Address Torrey) 300
    FastForward 1000 Blocks
    Comptroller Send "_setContributorArsSpeed(address,uint256)" (Address Torrey) 600
    FastForward 1000 Blocks
    Comptroller UpdateContributorRewards Torrey
    Comptroller ClaimArs Torrey
    Assert Equal (Comptroller ArsAccrued Torrey) 0
    Assert Equal (Erc20 ARS TokenBalance Torrey) 900000
    Comptroller Send "_setContributorArsSpeed(address,uint256)" (Address Torrey) 0
    FastForward 2000 Blocks
    Assert Equal (Comptroller ArsAccrued Torrey) 0
    Assert Equal (Erc20 ARS TokenBalance Torrey) 900000
